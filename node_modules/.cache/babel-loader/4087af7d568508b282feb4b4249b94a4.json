{"ast":null,"code":"var _jsxFileName = \"/Users/aundrekerr/Projects/React2019/cp24/src/components/Traffic.js\";\nimport React from 'react';\nimport TrafficCameras from './traffic/TrafficCameras.js';\nimport { fetchCameras } from '../utils/api';\n/**\n * Component responsible for rendering the traffic components.\n */\n\nexport default class Traffic extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      cameras: {},\n      camIndex: 0,\n      roadways: [],\n      roads: [],\n      currentRoadway: 'select',\n      value: '',\n      suggestions: []\n    };\n\n    this.camIndexCheck = (camIndex, position) => {\n      console.log(this.state.roads.length);\n\n      if (position === 'start') {\n        if (camIndex > 0) {\n          return camIndex - 1;\n        } else {\n          return 0;\n        }\n      }\n\n      if (position === 'end') {\n        if (camIndex < this.state.roads.length) {\n          return camIndex + 1;\n        } else {\n          return this.state.roads.length;\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    fetchCameras().then(data => {\n      const cams = data.filter(cam => cam.Organization === \"MTO\");\n      const roadways = [...new Set(cams.map(({\n        RoadwayName\n      }) => RoadwayName))];\n      const roads = data.filter(cam => cam.RoadwayName === \"HWY 401\" && cam.Organization === \"MTO\");\n      const roadNames = roads.map(road => road.Name);\n      this.setState({\n        loading: false,\n        cameras: cams,\n        roadways: roadways,\n        roads: roads,\n        currentRoadway: roadways[0],\n        suggestions: roadNames\n      });\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          loading = _this$state.loading,\n          roads = _this$state.roads,\n          camIndex = _this$state.camIndex;\n    return React.createElement(\"div\", {\n      className: \"traffic__wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, !loading === false ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"loading traffic\") : React.createElement(TrafficCameras, {\n      roads: roads,\n      camIndex: camIndex,\n      camIndexCheck: this.camIndexCheck,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/aundrekerr/Projects/React2019/cp24/src/components/Traffic.js"],"names":["React","TrafficCameras","fetchCameras","Traffic","Component","state","loading","cameras","camIndex","roadways","roads","currentRoadway","value","suggestions","camIndexCheck","position","console","log","length","componentDidMount","then","data","cams","filter","cam","Organization","Set","map","RoadwayName","roadNames","road","Name","setState","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport TrafficCameras from './traffic/TrafficCameras.js';\n\nimport { fetchCameras } from '../utils/api';\n\n\n/**\n * Component responsible for rendering the traffic components.\n */\nexport default class Traffic extends React.Component {\n\tstate = {\n\t\tloading: true,\n\t\tcameras: {},\n\t\tcamIndex: 0,\n\t\troadways: [],\n\t\troads: [],\n\t\tcurrentRoadway: 'select',\n\t\tvalue: '',\n\t\tsuggestions: [],\n\t}\n\n\tcomponentDidMount() {\n\t\tfetchCameras()\n\t\t\t.then((data) => {\n\t\t\t\tconst cams = data.filter(cam => cam.Organization === \"MTO\");\n\t\t\t\tconst roadways = [...(new Set(cams.map(({ RoadwayName }) => RoadwayName)))];\n\t\t\t\tconst roads = data.filter(cam => cam.RoadwayName === \"HWY 401\" && cam.Organization === \"MTO\");\n\t\t\t\tconst roadNames = roads.map(road => (road.Name))\n\n\t\t\t\tthis.setState({\n\t\t\t\t\tloading: false,\n\t\t\t\t\tcameras: cams,\n\t\t\t\t\troadways: roadways,\n\t\t\t\t\troads: roads,\n\t\t\t\t\tcurrentRoadway: roadways[0],\n\t\t\t\t\tsuggestions: roadNames\n\t\t\t\t})\n\t\t\t})\n\t}\n\n\tcamIndexCheck = (camIndex, position) => {\n\t\tconsole.log(this.state.roads.length)\n\n\t\tif (position === 'start') {\n\t\t\tif (camIndex > 0) {\n\t\t\t\t return camIndex - 1;\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\n\t\tif (position === 'end') {\n\t\t\tif (camIndex < this.state.roads.length) {\n\t\t\t\t return camIndex + 1;\n\t\t\t} else {\n\t\t\t\treturn this.state.roads.length;\n\t\t\t}\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { loading, roads, camIndex } = this.state;\n\n\t\treturn (\n\t\t\t<div className=\"traffic__wrapper\">\n\t\t\t\t{\t\n\t\t\t\t\t!loading === false \n\t\t\t\t\t? <p>loading traffic</p> \n\t\t\t\t\t: <TrafficCameras \n\t\t\t\t\t\troads={roads} \n\t\t\t\t\t\tcamIndex={camIndex}\n\t\t\t\t\t\tcamIndexCheck={this.camIndexCheck} />\n\t\t\t\t}\n\t\t\t</div>\n\t\t)\n\t}\n}"]},"metadata":{},"sourceType":"module"}