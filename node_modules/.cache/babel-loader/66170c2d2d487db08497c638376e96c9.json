{"ast":null,"code":"var _jsxFileName = \"/Users/aundrekerr/Projects/React2019/cp24/src/components/Weather.js\";\nimport React from 'react';\nimport { fetchWeekForecast, fetchDayForecast, fetchCityList } from '../utils/api';\nimport '../styles/components/_weather.scss';\nimport CitySelect from './weather/CitySelect.js';\n/**\n * Component responsible for rendering weather component.\n */\n\nexport default class Weather extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      week_forecast: null,\n      day_forecast: null,\n      city_list: null,\n      current_location_id: 6167865\n    };\n\n    this.changeCity = () => {};\n  }\n\n  componentDidMount() {\n    /** Gets list of cities for <select> element.  **/\n    fetchCityList().then(data => {\n      this.setState({\n        city_list: data\n      });\n    });\n    /** Grabs forecast for the week. **/\n\n    fetchWeekForecast(this.state.current_location_id).then(forecast => {\n      console.log('week', forecast);\n    });\n    /** Grabs forecast for the week. **/\n\n    fetchDayForecast(this.state.current_location_id).then(forecast => {\n      console.log('day', forecast);\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          week_forecast = _this$state.week_forecast,\n          day_forecast = _this$state.day_forecast,\n          current_location_id = _this$state.current_location_id,\n          city_list = _this$state.city_list;\n    return React.createElement(\"div\", {\n      className: \"forecast__wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, city_list === null ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"loading\") : React.createElement(CitySelect, {\n      cityList: city_list,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/aundrekerr/Projects/React2019/cp24/src/components/Weather.js"],"names":["React","fetchWeekForecast","fetchDayForecast","fetchCityList","CitySelect","Weather","Component","state","week_forecast","day_forecast","city_list","current_location_id","changeCity","componentDidMount","then","data","setState","forecast","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,EAA4BC,gBAA5B,EAA8CC,aAA9C,QAAmE,cAAnE;AACA,OAAO,oCAAP;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AAEA;;;;AAGA,eAAe,MAAMC,OAAN,SAAsBL,KAAK,CAACM,SAA5B,CAAsC;AAAA;AAAA;AAAA,SACpDC,KADoD,GAC5C;AACPC,MAAAA,aAAa,EAAE,IADR;AAEPC,MAAAA,YAAY,EAAE,IAFP;AAGPC,MAAAA,SAAS,EAAE,IAHJ;AAIPC,MAAAA,mBAAmB,EAAE;AAJd,KAD4C;;AAAA,SA8BpDC,UA9BoD,GA8BvC,MAAM,CAElB,CAhCmD;AAAA;;AAQpDC,EAAAA,iBAAiB,GAAG;AACnB;AACAV,IAAAA,aAAa,GACXW,IADF,CACQC,IAAD,IAAU;AACf,WAAKC,QAAL,CAAc;AACbN,QAAAA,SAAS,EAAEK;AADE,OAAd;AAGA,KALF;AAOA;;AACAd,IAAAA,iBAAiB,CAAC,KAAKM,KAAL,CAAWI,mBAAZ,CAAjB,CACEG,IADF,CACQG,QAAD,IAAc;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,QAApB;AACA,KAHF;AAKA;;AACAf,IAAAA,gBAAgB,CAAC,KAAKK,KAAL,CAAWI,mBAAZ,CAAhB,CACEG,IADF,CACQG,QAAD,IAAc;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBF,QAAnB;AACA,KAHF;AAIA;;AAMDG,EAAAA,MAAM,GAAG;AAAA,wBACgE,KAAKb,KADrE;AAAA,UACAC,aADA,eACAA,aADA;AAAA,UACeC,YADf,eACeA,YADf;AAAA,UAC6BE,mBAD7B,eAC6BA,mBAD7B;AAAA,UACkDD,SADlD,eACkDA,SADlD;AAER,WACC;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGEA,SAAS,KAAK,IAAd,GAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAArB,GAAsC,oBAAC,UAAD;AAAY,MAAA,QAAQ,EAAEA,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHxC,CADD;AAQA;;AA5CmD","sourcesContent":["import React from 'react';\nimport { fetchWeekForecast, fetchDayForecast, fetchCityList } from '../utils/api';\nimport '../styles/components/_weather.scss';\n\nimport CitySelect from './weather/CitySelect.js';\n\n/**\n * Component responsible for rendering weather component.\n */\nexport default class Weather extends React.Component {\n\tstate = {\n\t\tweek_forecast: null,\n\t\tday_forecast: null,\n\t\tcity_list: null,\n\t\tcurrent_location_id: 6167865 \n\t}\n\n\tcomponentDidMount() {\n\t\t/** Gets list of cities for <select> element.  **/\n\t\tfetchCityList()\n\t\t\t.then((data) => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tcity_list: data\n\t\t\t\t})\n\t\t\t})\n\n\t\t/** Grabs forecast for the week. **/\n\t\tfetchWeekForecast(this.state.current_location_id)\n\t\t\t.then((forecast) => {\n\t\t\t\tconsole.log('week', forecast)\n\t\t\t})\n\n\t\t/** Grabs forecast for the week. **/\n\t\tfetchDayForecast(this.state.current_location_id)\n\t\t\t.then((forecast) => {\n\t\t\t\tconsole.log('day', forecast)\n\t\t\t})\n\t}\n\n\tchangeCity = () => {\n\n\t}\n\n\trender() {\n\t\tconst { week_forecast, day_forecast, current_location_id, city_list } = this.state;\n\t\treturn (\n\t\t\t<div className=\"forecast__wrapper\">\n\t\t\t\t\n\t\t\t\t{ \n\t\t\t\t\tcity_list === null ? <p>loading</p> : <CitySelect cityList={city_list}/>\n\t\t\t\t}\n\t\t\t</div>\n\t\t)\n\t}\n}"]},"metadata":{},"sourceType":"module"}