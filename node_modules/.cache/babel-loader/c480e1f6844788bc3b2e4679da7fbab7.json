{"ast":null,"code":"var _jsxFileName = \"/Users/aundrekerr/Projects/React2019/cp24/src/components/Video.js\";\nimport React from 'react';\nimport YouTube from 'react-youtube';\nimport Loading from './loading/Loading.js';\nimport VideoList from './video/VideoList.js';\nimport VideoSelect from './video/VideoSelect.js';\nimport { fetchYouTubeVideos } from '../utils/api';\nimport '../styles/components/video/_video-player.scss';\n/**\n * Component responsible for rendering the video player components.\n */\n\nexport default class Video extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      playerToggle: 'desktop',\n      viewStatus: 'hide',\n      videoList: null,\n      videoListIndex: 0,\n      currentVideo: null,\n      channels: {\n        'CTV': 'UCi7Zk9baY1tvdlgxIML8MXg',\n        'Global': 'UChLtXXpo4Ge1ReTEboVvTDg',\n        'CityTV': 'UCVKAcQQCO8vv87Gk62SutAg',\n        'CBC': 'UCuFFtHWoLl5fauMMD5Ww2jA'\n      },\n      currentChannel: 'CTV'\n    };\n\n    this.prevVideo = event => {\n      if (this.state.videoListIndex > 0) {\n        console.log('prev');\n        this.setState({\n          videoListIndex: this.state.videoListIndex - 1,\n          currentVideo: this.state.videoList[this.state.videoListIndex - 1].id.videoId\n        });\n      }\n    };\n\n    this.nextVideo = event => {\n      if (this.state.videoListIndex < 11) {\n        console.log('next');\n        this.setState({\n          videoListIndex: this.state.videoListIndex + 1,\n          currentVideo: this.state.videoList[this.state.videoListIndex + 1].id.videoId\n        });\n      }\n    };\n\n    this.loadNewVideo = (event, index) => {\n      this.setState({\n        videoListIndex: index,\n        currentVideo: this.state.videoList[index].id.videoId\n      });\n    };\n\n    this.toggleView = () => {\n      this.setState(({\n        viewStatus\n      }) => ({\n        viewStatus: viewStatus === 'hide' ? 'show' : 'hide'\n      }));\n    };\n\n    this.changeChannel = e => {\n      this.setState({\n        currentChannel: e.target.value,\n        videoListIndex: 0\n      });\n      /** Get the 10 latest YouTube videos. **/\n\n      fetchYouTubeVideos(this.state.channels[e.target.value]).then(videos => {\n        this.setState({\n          videoList: videos,\n          currentVideo: videos[0].id.videoId\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    /** Get the 10 latest YouTube videos. **/\n    fetchYouTubeVideos(this.state.channels[this.state.currentChannel]).then(videos => {\n      this.setState({\n        videoList: videos,\n        currentVideo: videos[this.state.videoListIndex].id.videoId\n      });\n    });\n  }\n  /** Load the previous video in the videoList array. **/\n\n\n  render() {\n    /** YouTube Iframe player parameters. **/\n    const opts = {\n      height: '390',\n      width: '640',\n      playerVars: {\n        // https://developers.google.com/youtube/player_parameters\n        autoplay: 1,\n        controls: 1,\n        mute: 1,\n        modestbranding: 1,\n        playsinline: 1\n      }\n    };\n    const _this$state = this.state,\n          videoList = _this$state.videoList,\n          currentVideo = _this$state.currentVideo,\n          viewStatus = _this$state.viewStatus,\n          currentChannel = _this$state.currentChannel,\n          channels = _this$state.channels;\n    return React.createElement(\"div\", {\n      className: \"video__wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, videoList === null ? React.createElement(Loading, {\n      template: \"video\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }) : React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"video-list__toggle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      onClick: () => this.toggleView(),\n      src: process.env.PUBLIC_URL + '/images/streamline-icon-list-bullets@24x24.svg',\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    })), React.createElement(VideoSelect, {\n      channels: channels,\n      currentChannel: currentChannel,\n      changeChannel: this.changeChannel,\n      prevVideo: () => this.prevVideo(),\n      nextVideo: () => this.nextVideo(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"video-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(YouTube, {\n      videoId: currentVideo,\n      opts: opts,\n      onEnd: this.nextVideo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    })), React.createElement(VideoList, {\n      videos: videoList,\n      loadNewVideo: this.loadNewVideo,\n      toggleView: this.toggleView,\n      viewStatus: viewStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    })));\n  }\n\n  _onReady(event) {// access to player in all event handlers via event.target\n    // event.target.pauseVideo();\n  }\n\n}","map":{"version":3,"sources":["/Users/aundrekerr/Projects/React2019/cp24/src/components/Video.js"],"names":["React","YouTube","Loading","VideoList","VideoSelect","fetchYouTubeVideos","Video","Component","state","playerToggle","viewStatus","videoList","videoListIndex","currentVideo","channels","currentChannel","prevVideo","event","console","log","setState","id","videoId","nextVideo","loadNewVideo","index","toggleView","changeChannel","e","target","value","then","videos","componentDidMount","render","opts","height","width","playerVars","autoplay","controls","mute","modestbranding","playsinline","process","env","PUBLIC_URL","_onReady"],"mappings":"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","sourcesContent":["import React from 'react';\nimport YouTube from 'react-youtube';\nimport Loading from './loading/Loading.js';\nimport VideoList from './video/VideoList.js';\nimport VideoSelect from './video/VideoSelect.js';\n\nimport { fetchYouTubeVideos } from '../utils/api';\n\nimport '../styles/components/video/_video-player.scss';\n\n\n/**\n * Component responsible for rendering the video player components.\n */\nexport default class Video extends React.Component {\n\tstate = {\n\t\tplayerToggle: 'desktop',\n\t\tviewStatus: 'hide',\n\t\tvideoList: null,\n\t\tvideoListIndex: 0,\n\t\tcurrentVideo: null,\n\t\tchannels: {\n\t\t\t'CTV': 'UCi7Zk9baY1tvdlgxIML8MXg',\n\t\t\t'Global': 'UChLtXXpo4Ge1ReTEboVvTDg',\n\t\t\t'CityTV': 'UCVKAcQQCO8vv87Gk62SutAg',\n\t\t\t'CBC': 'UCuFFtHWoLl5fauMMD5Ww2jA'\n\t\t},\n\t\tcurrentChannel: 'CTV'\n\t}\n\n\tcomponentDidMount() {\n\n\t\t/** Get the 10 latest YouTube videos. **/\n\t\tfetchYouTubeVideos( this.state.channels[this.state.currentChannel] )\n\t\t\t.then((videos) => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tvideoList: videos,\n\t\t\t\t\tcurrentVideo: videos[this.state.videoListIndex].id.videoId\n\t\t\t\t});\n\t\t\t})\n\t}\n\n\t/** Load the previous video in the videoList array. **/\n\tprevVideo = (event) => {\n\t\tif ( this.state.videoListIndex > 0 ) {\n\t\t\tconsole.log('prev')\n\t\t\tthis.setState({\n\t\t\t\tvideoListIndex: this.state.videoListIndex - 1,\n\t\t\t\tcurrentVideo: this.state.videoList[this.state.videoListIndex - 1].id.videoId\n\t\t\t})\n\t\t}\n\t}\n\n\t/** Load the next video in the videoList array. **/\n\tnextVideo = (event) => {\n\t\tif ( this.state.videoListIndex < 11 ) {\n\t\t\tconsole.log('next')\n\t\t\tthis.setState({\n\t\t\t\tvideoListIndex: this.state.videoListIndex + 1,\n\t\t\t\tcurrentVideo: this.state.videoList[this.state.videoListIndex + 1].id.videoId\n\t\t\t})\n\t\t}\n\t}\n\n\t/** Manually load a video from the passed-in video ID. **/\n\tloadNewVideo = (event, index) => {\n\t\tthis.setState({\n\t\t\tvideoListIndex: index,\n\t\t\tcurrentVideo: this.state.videoList[index].id.videoId\n\t\t})\n\t}\n\n\t/** Toggle the video list selection. **/\n\ttoggleView = () => {\n\t\tthis.setState(({viewStatus}) => ({\n\t\t\tviewStatus: viewStatus === 'hide' ? 'show' : 'hide'\n\t\t}))\n\t}\n\n\t/** Toggle the video list selection. **/\n\tchangeChannel = (e) => {\n\n\t\tthis.setState({\n\t\t\tcurrentChannel: e.target.value,\n\t\t\tvideoListIndex: 0,\n\t\t})\n\n\t\t/** Get the 10 latest YouTube videos. **/\n\t\tfetchYouTubeVideos( this.state.channels[e.target.value] )\n\t\t\t.then((videos) => {\n\t\t\t\t\n\t\t\t\tthis.setState({\n\t\t\t\t\tvideoList: videos,\n\t\t\t\t\tcurrentVideo: videos[0].id.videoId\n\t\t\t\t});\n\t\t\t})\n\t}\n\n\trender() {\n\n\t\t/** YouTube Iframe player parameters. **/\n\t\tconst opts = {\n\t\t\theight: '390',\n\t\t\twidth: '640',\n\t\t\tplayerVars: { // https://developers.google.com/youtube/player_parameters\n\t\t\t\tautoplay: 1,\n\t\t\t\tcontrols: 1,\n\t\t\t\tmute: 1,\n\t\t\t\tmodestbranding: 1,\n\t\t\t\tplaysinline: 1\n\t\t\t}\n\t\t}\n\n\t\tconst { videoList, currentVideo, viewStatus, currentChannel, channels } = this.state;\n\n\n\t\treturn (\n\t\t\t<div className='video__wrapper'>\n\t\t\t\t{ \n\t\t\t\t\tvideoList === null \n\t\t\t\t\t\t? <Loading template='video'/>\n\t\t\t\t\t\t: <React.Fragment>\n\t\t\t\t\t\t\t<div className=\"video-list__toggle\" >\n\t\t\t\t\t\t\t\t<img onClick={() => this.toggleView()} src={process.env.PUBLIC_URL + '/images/streamline-icon-list-bullets@24x24.svg'} alt=''/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<VideoSelect\n\t\t\t\t\t\t\t\tchannels={channels}\n\t\t\t\t\t\t\t\tcurrentChannel={currentChannel}\n\t\t\t\t\t\t\t\tchangeChannel={this.changeChannel} \n\t\t\t\t\t\t\t\tprevVideo={() => this.prevVideo()}\n\t\t\t\t\t\t\t\tnextVideo={() => this.nextVideo()}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div className=\"video-container\">\n\t\t\t\t\t\t\t\t<YouTube\n\t\t\t\t\t\t\t\t\tvideoId={currentVideo}\n\t\t\t\t\t\t\t\t\topts={opts}\n\t\t\t\t\t\t\t\t\tonEnd={this.nextVideo} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<VideoList \n\t\t\t\t\t\t\t\tvideos={videoList}\n\t\t\t\t\t\t\t\tloadNewVideo={this.loadNewVideo}\n\t\t\t\t\t\t\t\ttoggleView={this.toggleView}\n\t\t\t\t\t\t\t\tviewStatus={viewStatus} />\n\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t }\n\t\t\t</div>\n\t\t)\n\t}\n\n\t_onReady(event) {\n\t\t// access to player in all event handlers via event.target\n\t\t// event.target.pauseVideo();\n\t}\n}"]},"metadata":{},"sourceType":"module"}