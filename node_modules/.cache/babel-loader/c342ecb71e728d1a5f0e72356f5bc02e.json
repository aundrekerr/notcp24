{"ast":null,"code":"const id = \"YOUR_CLIENT_ID\";\nconst sec = 'YOUR_SECRET_ID';\nconst REACT_APP_WEATHER_API_KEY = process.env.REACT_APP_WEATHER_API_KEY;\nexport function fetchWeekForecast(locationID) {\n  const endpoint = \"http://api.openweathermap.org/data/2.5/forecast?id=\".concat(locationID, \"&APPID=\").concat(REACT_APP_WEATHER_API_KEY, \"&units=metric\");\n  return fetch(endpoint).then(res => res.json()).then(data => {\n    if (!data.city) {\n      throw new Error(data);\n    }\n\n    return data;\n  });\n}\nexport function fetchDayForecast(locationID) {\n  const endpoint = \"http://api.openweathermap.org/data/2.5/weather?id=\".concat(locationID, \"&APPID=\").concat(REACT_APP_WEATHER_API_KEY, \"&units=metric\");\n  return fetch(endpoint).then(res => res.json()).then(data => {\n    return data;\n  });\n}\nexport function fetchCityList() {\n  const endpoint = \"http://api.openweathermap.org/data/2.5/group?id=6167865,6091104,5950267,6122091,6066513,6087701,6173577,6075357,5907364,5882873,6094578,6104111,6092122,5911592,6074375,5906831,5888377,5913424,6172932,5969782&APPID=\".concat(REACT_APP_WEATHER_API_KEY, \"&units=metric\");\n  return fetch(endpoint).then(res => res.json()).then(data => {\n    let city_list = [];\n    data.list.map(city => {\n      const id = city.id,\n            name = city.name;\n      city_list.push({\n        id: id,\n        name: name\n      });\n      console.log(city_list);\n    });\n  });\n}","map":{"version":3,"sources":["/Users/aundrekerr/Projects/React2019/cp24/src/utils/api.js"],"names":["id","sec","REACT_APP_WEATHER_API_KEY","process","env","fetchWeekForecast","locationID","endpoint","fetch","then","res","json","data","city","Error","fetchDayForecast","fetchCityList","city_list","list","map","name","push","console","log"],"mappings":"AAAA,MAAMA,EAAE,GAAG,gBAAX;AACA,MAAMC,GAAG,GAAG,gBAAZ;MAEQC,yB,GAA8BC,OAAO,CAACC,G,CAAtCF,yB;AAER,OAAO,SAASG,iBAAT,CAA6BC,UAA7B,EAA0C;AAChD,QAAMC,QAAQ,gEAAyDD,UAAzD,oBAA6EJ,yBAA7E,kBAAd;AAEA,SAAOM,KAAK,CAACD,QAAD,CAAL,CACLE,IADK,CACCC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADT,EAELF,IAFK,CAECG,IAAD,IAAU;AACf,QAAK,CAACA,IAAI,CAACC,IAAX,EAAkB;AACjB,YAAM,IAAIC,KAAJ,CAAUF,IAAV,CAAN;AACA;;AAED,WAAOA,IAAP;AACA,GARK,CAAP;AASA;AAED,OAAO,SAASG,gBAAT,CAA4BT,UAA5B,EAAyC;AAC/C,QAAMC,QAAQ,+DAAwDD,UAAxD,oBAA4EJ,yBAA5E,kBAAd;AAEA,SAAOM,KAAK,CAACD,QAAD,CAAL,CACLE,IADK,CACCC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADT,EAELF,IAFK,CAECG,IAAD,IAAU;AACf,WAAOA,IAAP;AACA,GAJK,CAAP;AAKA;AAED,OAAO,SAASI,aAAT,GAA2B;AACjC,QAAMT,QAAQ,mOAA4NL,yBAA5N,kBAAd;AAEA,SAAOM,KAAK,CAACD,QAAD,CAAL,CACLE,IADK,CACCC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADT,EAELF,IAFK,CAECG,IAAD,IAAU;AACf,QAAIK,SAAS,GAAG,EAAhB;AAEAL,IAAAA,IAAI,CAACM,IAAL,CAAUC,GAAV,CAAeN,IAAD,IAAU;AAAA,YACfb,EADe,GACFa,IADE,CACfb,EADe;AAAA,YACXoB,IADW,GACFP,IADE,CACXO,IADW;AAGvBH,MAAAA,SAAS,CAACI,IAAV,CAAe;AAACrB,QAAAA,EAAE,EAAEA,EAAL;AAASoB,QAAAA,IAAI,EAAEA;AAAf,OAAf;AAEAE,MAAAA,OAAO,CAACC,GAAR,CAAYN,SAAZ;AACA,KAND;AAOA,GAZK,CAAP;AAaA","sourcesContent":["const id = \"YOUR_CLIENT_ID\";\nconst sec = 'YOUR_SECRET_ID';\n\nconst { REACT_APP_WEATHER_API_KEY } = process.env;\n\nexport function fetchWeekForecast ( locationID ) {\n\tconst endpoint = `http://api.openweathermap.org/data/2.5/forecast?id=${locationID}&APPID=${REACT_APP_WEATHER_API_KEY}&units=metric`;\n\n\treturn fetch(endpoint)\n\t\t.then((res) => res.json())\n\t\t.then((data) => {\n\t\t\tif ( !data.city ) {\n\t\t\t\tthrow new Error(data);\n\t\t\t}\n\n\t\t\treturn data;\n\t\t})\n}\n\nexport function fetchDayForecast ( locationID ) {\n\tconst endpoint = `http://api.openweathermap.org/data/2.5/weather?id=${locationID}&APPID=${REACT_APP_WEATHER_API_KEY}&units=metric`;\n\n\treturn fetch(endpoint)\n\t\t.then((res) => res.json())\n\t\t.then((data) => {\n\t\t\treturn data;\n\t\t})\n}\n\nexport function fetchCityList ( ) {\n\tconst endpoint = `http://api.openweathermap.org/data/2.5/group?id=6167865,6091104,5950267,6122091,6066513,6087701,6173577,6075357,5907364,5882873,6094578,6104111,6092122,5911592,6074375,5906831,5888377,5913424,6172932,5969782&APPID=${REACT_APP_WEATHER_API_KEY}&units=metric`;\n\n\treturn fetch(endpoint)\n\t\t.then((res) => res.json())\n\t\t.then((data) => {\n\t\t\tlet city_list = [];\n\n\t\t\tdata.list.map((city) => {\n\t\t\t\tconst { id, name } = city;\n\n\t\t\t\tcity_list.push({id: id, name: name});\n\n\t\t\t\tconsole.log(city_list)\n\t\t\t});\n\t\t})\n}"]},"metadata":{},"sourceType":"module"}