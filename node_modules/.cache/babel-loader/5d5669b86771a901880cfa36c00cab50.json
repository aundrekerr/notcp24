{"ast":null,"code":"var _jsxFileName = \"/Users/aundrekerr/Projects/React2019/cp24/src/components/Video.js\";\nimport React from 'react';\nimport YouTube from 'react-youtube';\nimport { fetchYouTubeVideos } from '../utils/api';\n/**\n * Component responsible for rendering the video player components.\n */\n\nexport default class Video extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      playerToggle: 'desktop',\n      videoList: null,\n      currentVideo: null\n    };\n  }\n\n  componentDidMount() {\n    fetchYouTubeVideos().then(videos => {\n      console.log(videos); // this.setState({\n      // \tvideoList: videos,\n      // \tcurrentVideo: videos[0].id.videoId\n      // });\n    });\n  }\n\n  render() {\n    const opts = {\n      height: '390',\n      width: '640',\n      playerVars: {\n        // https://developers.google.com/youtube/player_parameters\n        autoplay: 1\n      }\n    };\n    const _this$state = this.state,\n          videoList = _this$state.videoList,\n          currentVideo = _this$state.currentVideo;\n    return React.createElement(\"div\", {\n      className: \"video__wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"mobile-player\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"mobile player\"));\n  }\n\n  _onReady(event) {\n    // access to player in all event handlers via event.target\n    event.target.pauseVideo();\n  }\n\n}","map":{"version":3,"sources":["/Users/aundrekerr/Projects/React2019/cp24/src/components/Video.js"],"names":["React","YouTube","fetchYouTubeVideos","Video","Component","state","playerToggle","videoList","currentVideo","componentDidMount","then","videos","console","log","render","opts","height","width","playerVars","autoplay","_onReady","event","target","pauseVideo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AAEA,SAASC,kBAAT,QAAmC,cAAnC;AAGA;;;;AAGA,eAAe,MAAMC,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAClDC,KADkD,GAC1C;AACPC,MAAAA,YAAY,EAAE,SADP;AAEPC,MAAAA,SAAS,EAAE,IAFJ;AAGPC,MAAAA,YAAY,EAAE;AAHP,KAD0C;AAAA;;AAOlDC,EAAAA,iBAAiB,GAAG;AAEnBP,IAAAA,kBAAkB,GAChBQ,IADF,CACQC,MAAD,IAAY;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,EADiB,CAEjB;AACA;AACA;AACA;AACA,KAPF;AASA;;AACDG,EAAAA,MAAM,GAAG;AACR,UAAMC,IAAI,GAAG;AACZC,MAAAA,MAAM,EAAE,KADI;AAEZC,MAAAA,KAAK,EAAE,KAFK;AAGZC,MAAAA,UAAU,EAAE;AAAE;AACbC,QAAAA,QAAQ,EAAE;AADC;AAHA,KAAb;AADQ,wBAS4B,KAAKd,KATjC;AAAA,UASAE,SATA,eASAA,SATA;AAAA,UASWC,YATX,eASWA,YATX;AAYR,WACC;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIC;AAAK,MAAA,EAAE,EAAC,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJD,CADD;AAQA;;AAEDY,EAAAA,QAAQ,CAACC,KAAD,EAAQ;AACf;AACAA,IAAAA,KAAK,CAACC,MAAN,CAAaC,UAAb;AACA;;AA5CiD","sourcesContent":["import React from 'react';\nimport YouTube from 'react-youtube';\n\nimport { fetchYouTubeVideos } from '../utils/api';\n\n\n/**\n * Component responsible for rendering the video player components.\n */\nexport default class Video extends React.Component {\n\tstate = {\n\t\tplayerToggle: 'desktop',\n\t\tvideoList: null,\n\t\tcurrentVideo: null\n\t}\n\n\tcomponentDidMount() {\n\t\t\n\t\tfetchYouTubeVideos()\n\t\t\t.then((videos) => {\n\t\t\t\tconsole.log(videos);\n\t\t\t\t// this.setState({\n\t\t\t\t// \tvideoList: videos,\n\t\t\t\t// \tcurrentVideo: videos[0].id.videoId\n\t\t\t\t// });\n\t\t\t});\n\n\t}\n\trender() {\n\t\tconst opts = {\n\t\t\theight: '390',\n\t\t\twidth: '640',\n\t\t\tplayerVars: { // https://developers.google.com/youtube/player_parameters\n\t\t\t\tautoplay: 1\n\t\t\t}\n\t\t}\n\n\t\tconst { videoList, currentVideo } = this.state;\n\n\n\t\treturn (\n\t\t\t<div className=\"video__wrapper\">\n\t\t\t\t{ \n\t\t\t\t\t// videoList === null ? <p>loading desktop player</p> : <YouTube videoId={currentVideo} opts={opts} onReady={this._onReady} /> \n\t\t\t\t }\n\t\t\t\t<div id=\"mobile-player\">mobile player</div>\n\t\t\t</div>\n\t\t)\n\t}\n\n\t_onReady(event) {\n\t\t// access to player in all event handlers via event.target\n\t\tevent.target.pauseVideo();\n\t}\n}"]},"metadata":{},"sourceType":"module"}