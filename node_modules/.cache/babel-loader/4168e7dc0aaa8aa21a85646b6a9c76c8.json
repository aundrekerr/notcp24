{"ast":null,"code":"const _process$env = process.env,\n      REACT_APP_WEATHER_API_KEY = _process$env.REACT_APP_WEATHER_API_KEY,\n      REACT_APP_YOUTUBE_API_KEY = _process$env.REACT_APP_YOUTUBE_API_KEY;\n\nvar convert = require('xml-js');\n/**\n * Weather APIs requests.\n */\n\n\nexport function fetchForecast(locationID) {\n  const endpoint = \"http://api.openweathermap.org/data/2.5/forecast?id=\".concat(locationID, \"&APPID=\").concat(REACT_APP_WEATHER_API_KEY, \"&units=metric\");\n  return fetch(endpoint).then(res => res.json()).then(data => {\n    return data;\n  }).catch(error => {\n    console.warn(error);\n    return null;\n  });\n}\nexport function fetchCityList() {\n  const endpoint = \"http://api.openweathermap.org/data/2.5/group?id=6167865,6091104,5950267,6122091,6066513,6087701,6173577,6075357,5907364,5882873,6094578,6104111,6092122,5911592,6074375,5906831,5888377,5913424,6172932,5969782&APPID=\".concat(REACT_APP_WEATHER_API_KEY, \"&units=metric\");\n  return fetch(endpoint).then(res => res.json()).then(data => {\n    let city_list = [];\n    data.list.map(city => {\n      const id = city.id,\n            name = city.name;\n      city_list.push({\n        id: id,\n        name: name\n      });\n      return;\n    });\n    return city_list;\n  }).catch(error => {\n    console.warn(error);\n    return null;\n  });\n}\n/**\n * YouTube API requests.\n */\n\nexport function fetchYouTubeVideos(channel) {\n  const endpoint = \"https://www.googleapis.com/youtube/v3/search?key=\".concat(REACT_APP_YOUTUBE_API_KEY, \"&channelId=\").concat(channel, \"&part=snippet,id&order=date&maxResults=12\");\n  return fetch(endpoint).then(res => res.json()).then(data => {\n    const video_list = data.items;\n    return video_list;\n  }).catch(error => {\n    console.warn(error);\n    return null;\n  });\n}\n/**\n * Newsfeed requests.\n */\n\nexport function fetchNewsFeed(feed) {\n  const endpoints = {\n    'local': 'https://toronto.ctvnews.ca/rss/ctv-news-toronto-1.822319',\n    'world': 'https://www.ctvnews.ca/rss/ctvnews-ca-world-public-rss-1.822289',\n    'entertainment': 'https://www.ctvnews.ca/rss/ctvnews-ca-entertainment-public-rss-1.822292',\n    'sports': 'https://www.ctvnews.ca/rss/sports/ctv-news-sports-1.3407726',\n    'lifestyle': 'https://www.ctvnews.ca/rss/lifestyle/ctv-news-lifestyle-1.3407722'\n  };\n  return fetch(endpoints[feed]).then(response => response.text()).then(str => {\n    const newJson = convert.xml2json(str, {\n      compact: true,\n      spaces: 4\n    });\n    const news = JSON.parse(newJson);\n    return news.rss.channel.item;\n  }).catch(error => {\n    console.warn(error);\n    return null;\n  });\n}\n/**\n * Camera requests.\n */\n\nexport function fetchCameras() {\n  const endpoint = 'https://aundrekerr.com/yoink/index.php?url=https://511on.ca/api/v2/get/cameras';\n  return fetch(endpoint).then(res => res.json()).then(data => {\n    return data;\n  }).catch(error => {\n    console.warn(error);\n    return null;\n  });\n}","map":{"version":3,"sources":["/Users/aundrekerr/Projects/React2019/cp24/src/utils/api.js"],"names":["process","env","REACT_APP_WEATHER_API_KEY","REACT_APP_YOUTUBE_API_KEY","convert","require","fetchForecast","locationID","endpoint","fetch","then","res","json","data","catch","error","console","warn","fetchCityList","city_list","list","map","city","id","name","push","fetchYouTubeVideos","channel","video_list","items","fetchNewsFeed","feed","endpoints","response","text","str","newJson","xml2json","compact","spaces","news","JSON","parse","rss","item","fetchCameras"],"mappings":"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","sourcesContent":["const { REACT_APP_WEATHER_API_KEY, REACT_APP_YOUTUBE_API_KEY } = process.env;\n\nvar convert = require('xml-js');\n\n/**\n * Weather APIs requests.\n */\nexport function fetchForecast ( locationID ) {\n\tconst endpoint = `http://api.openweathermap.org/data/2.5/forecast?id=${locationID}&APPID=${REACT_APP_WEATHER_API_KEY}&units=metric`;\n\n\treturn fetch(endpoint)\n\t\t.then((res) => res.json())\n\t\t.then((data) => {\n\t\t\treturn data;\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.warn(error)\n\t\t\treturn null\n\t\t});\n}\n\nexport function fetchCityList ( ) {\n\tconst endpoint = `http://api.openweathermap.org/data/2.5/group?id=6167865,6091104,5950267,6122091,6066513,6087701,6173577,6075357,5907364,5882873,6094578,6104111,6092122,5911592,6074375,5906831,5888377,5913424,6172932,5969782&APPID=${REACT_APP_WEATHER_API_KEY}&units=metric`;\n\n\treturn fetch(endpoint)\n\t\t.then((res) => res.json())\n\t\t.then((data) => {\n\t\t\tlet city_list = [];\n\n\t\t\tdata.list.map((city) => {\n\t\t\t\tconst { id, name } = city;\n\t\t\t\tcity_list.push({id: id, name: name});\n\t\t\t\treturn;\n\t\t\t});\n\t\t\t\n\t\t\treturn city_list;\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.warn(error)\n\t\t\treturn null\n\t\t});\n}\n\n\n\n\n/**\n * YouTube API requests.\n */\nexport function fetchYouTubeVideos ( channel ) {\n\tconst endpoint = `https://www.googleapis.com/youtube/v3/search?key=${REACT_APP_YOUTUBE_API_KEY}&channelId=${channel}&part=snippet,id&order=date&maxResults=12`;\n\n\treturn fetch(endpoint)\n\t\t.then((res) => res.json())\n\t\t.then((data) => {\n\t\t\tconst video_list = data.items;\n\t\t\treturn video_list;\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.warn(error)\n\t\t\treturn null\n\t\t});\n}\n\n\n\n\n\n/**\n * Newsfeed requests.\n */\nexport function fetchNewsFeed ( feed ) {\n\tconst endpoints = {\n\t\t\t'local': 'https://toronto.ctvnews.ca/rss/ctv-news-toronto-1.822319',\n\t\t\t'world': 'https://www.ctvnews.ca/rss/ctvnews-ca-world-public-rss-1.822289',\n\t\t\t'entertainment': 'https://www.ctvnews.ca/rss/ctvnews-ca-entertainment-public-rss-1.822292',\n\t\t\t'sports': 'https://www.ctvnews.ca/rss/sports/ctv-news-sports-1.3407726',\n\t\t\t'lifestyle': 'https://www.ctvnews.ca/rss/lifestyle/ctv-news-lifestyle-1.3407722'\n\t\t};\n\n\treturn fetch(endpoints[feed])\n\t\t.then(response => response.text())\n\t\t.then(str => {\n\t\t\tconst newJson = convert.xml2json(str, {compact: true, spaces: 4})\n\t\t\tconst news = JSON.parse(newJson)\n\t\t\treturn news.rss.channel.item;\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.warn(error)\n\t\t\treturn null\n\t\t});\n\n}\n\n\n\n\n\n\n/**\n * Camera requests.\n */\nexport function fetchCameras ( ) {\n\tconst endpoint = 'https://aundrekerr.com/yoink/index.php?url=https://511on.ca/api/v2/get/cameras';\n\n\treturn fetch(endpoint)\n\t\t.then((res) => res.json())\n\t\t.then((data) => {\n\t\t\treturn data;\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.warn(error)\n\t\t\treturn null\n\t\t});\n}\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}