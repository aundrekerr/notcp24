{"ast":null,"code":"var _jsxFileName = \"/Users/aundrekerr/Projects/React2019/cp24/src/components/Traffic.js\";\nimport React from 'react';\nimport TrafficCameras from './traffic/TrafficCameras.js';\nimport Autocomplete from 'react-autocomplete';\nimport { fetchCameras } from '../utils/api';\nimport '../styles/components/traffic/_traffic.scss';\nimport '../styles/components/traffic/_camera-select.scss';\n/**\n * Component responsible for rendering the traffic components.\n */\n\nexport default class Traffic extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      cameras: {},\n      camIndex: 0,\n      roadways: [],\n      roads: [],\n      currentRoadway: 'select',\n      value: '',\n      suggestions: [],\n      trafficToggle: 'cameras'\n    };\n\n    this.handleSelectChange = event => {\n      const newRoads = this.state.cameras.filter(cam => cam.RoadwayName === event.target.value && cam.Organization === \"MTO\");\n      this.setState({\n        roads: newRoads,\n        currentRoadway: event.target.value,\n        value: ''\n      });\n    };\n\n    this.cameraElement = React.createRef();\n  }\n\n  componentDidMount() {\n    fetchCameras().then(data => {\n      const cams = data.filter(cam => cam.Organization === \"MTO\");\n      const roadways = [...new Set(cams.map(({\n        RoadwayName\n      }) => RoadwayName))];\n      const roads = data.filter(cam => cam.RoadwayName === \"HWY 401\" && cam.Organization === \"MTO\");\n      const roadNames = roads.map(road => road.Name);\n      this.setState({\n        loading: false,\n        cameras: cams,\n        roadways: roadways,\n        roads: roads,\n        currentRoadway: roadways[1],\n        suggestions: roadNames\n      });\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          loading = _this$state.loading,\n          trafficToggle = _this$state.trafficToggle,\n          roads = _this$state.roads,\n          roadways = _this$state.roadways,\n          camIndex = _this$state.camIndex,\n          currentRoadway = _this$state.currentRoadway,\n          suggestions = _this$state.suggestions,\n          value = _this$state.value;\n    return React.createElement(\"div\", {\n      className: \"traffic__wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"traffic-intro__wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, !loading === false ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"loading traffic\") : trafficToggle === 'cameras' ? React.createElement(\"h5\", {\n      className: \"title-block light clickable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Traffic - Cameras\")) : React.createElement(\"h5\", {\n      className: \"title-block light clickable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Traffic - Routes\")), !loading === false ? null : React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"camera-select__wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      onChange: this.handleSelectChange,\n      value: this.currentRoadway,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, roadways.map((roadway, index) => roadway === null ? null : React.createElement(\"option\", {\n      key: index,\n      value: roadway,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, roadway))), React.createElement(\"span\", {\n      className: \"helper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })))), React.createElement(Autocomplete, {\n      getItemValue: item => item,\n      items: [roadways],\n      renderItem: (item, isHighlighted) => React.createElement(\"div\", {\n        style: {\n          background: isHighlighted ? 'lightgray' : 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, item.label),\n      value: value,\n      onChange: e => value = e.target.value,\n      onSelect: val => value = val,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(TrafficCameras, {\n      roads: roads,\n      camIndex: camIndex,\n      ref: this.cameraElement,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/aundrekerr/Projects/React2019/cp24/src/components/Traffic.js"],"names":["React","TrafficCameras","Autocomplete","fetchCameras","Traffic","Component","constructor","props","state","loading","cameras","camIndex","roadways","roads","currentRoadway","value","suggestions","trafficToggle","handleSelectChange","event","newRoads","filter","cam","RoadwayName","target","Organization","setState","cameraElement","createRef","componentDidMount","then","data","cams","Set","map","roadNames","road","Name","render","roadway","index","item","isHighlighted","background","label","e","val"],"mappings":"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","sourcesContent":["import React from 'react';\nimport TrafficCameras from './traffic/TrafficCameras.js';\nimport Autocomplete from 'react-autocomplete';\n\nimport { fetchCameras } from '../utils/api';\n\nimport '../styles/components/traffic/_traffic.scss';\nimport '../styles/components/traffic/_camera-select.scss';\n\n/**\n * Component responsible for rendering the traffic components.\n */\nexport default class Traffic extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.cameraElement = React.createRef();\n\t}\n\n\tstate = {\n\t\tloading: true,\n\t\tcameras: {},\n\t\tcamIndex: 0,\n\t\troadways: [],\n\t\troads: [],\n\t\tcurrentRoadway: 'select',\n\t\tvalue: '',\n\t\tsuggestions: [],\n\t\ttrafficToggle: 'cameras'\n\t}\n\n\tcomponentDidMount() {\n\t\tfetchCameras()\n\t\t\t.then((data) => {\n\t\t\t\tconst cams = data.filter(cam => cam.Organization === \"MTO\");\n\t\t\t\tconst roadways = [...(new Set(cams.map(({ RoadwayName }) => RoadwayName)))];\n\t\t\t\tconst roads = data.filter(cam => cam.RoadwayName === \"HWY 401\" && cam.Organization === \"MTO\");\n\t\t\t\tconst roadNames = roads.map(road => (road.Name))\n\n\t\t\t\tthis.setState({\n\t\t\t\t\tloading: false,\n\t\t\t\t\tcameras: cams,\n\t\t\t\t\troadways: roadways,\n\t\t\t\t\troads: roads,\n\t\t\t\t\tcurrentRoadway: roadways[1],\n\t\t\t\t\tsuggestions: roadNames\n\t\t\t\t})\n\t\t\t})\n\n\n\t}\n\n\thandleSelectChange = (event) => {\n\t\tconst newRoads = this.state.cameras.filter(cam => cam.RoadwayName === event.target.value && cam.Organization === \"MTO\");\n\t\t\n\t\tthis.setState({\n\t\t\troads: newRoads,\n\t\t\tcurrentRoadway: event.target.value,\n\t\t\tvalue: ''\n\t\t})\n\t}\n\n\trender() {\n\t\tconst { loading, trafficToggle, roads, roadways, camIndex, currentRoadway, suggestions, value } = this.state;\n\n\t\treturn (\n\t\t\t<div className=\"traffic__wrapper\">\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<div className='traffic-intro__wrapper'>\n\t\t\t\t\t{\n\t\t\t\t\t\t!loading === false \n\t\t\t\t\t\t? <p>loading traffic</p> \n\t\t\t\t\t\t: trafficToggle === 'cameras'\n\t\t\t\t\t\t\t? <h5 className='title-block light clickable'><span>Traffic - Cameras</span></h5>\n\t\t\t\t\t\t\t: <h5 className='title-block light clickable'><span>Traffic - Routes</span></h5>\n\t\t\t\t\t}\n\n\t\t\t\t\t{\n\t\t\t\t\t\t!loading === false \n\t\t\t\t\t\t\t? null\n\t\t\t\t\t\t\t: <React.Fragment>\n\t\t\t\t\t\t\t\t<div className=\"camera-select__wrapper\">\n\t\t\t\t\t\t\t\t\t<select onChange={this.handleSelectChange} value={this.currentRoadway}>\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\troadways.map((roadway, index) => (\n\t\t\t\t\t\t\t\t\t\t\t\troadway === null \n\t\t\t\t\t\t\t\t\t\t\t\t\t? null\n\t\t\t\t\t\t\t\t\t\t\t\t\t: <option key={index} value={roadway}>{roadway}</option>\n\t\t\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t<span className=\"helper\"/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t\t{\n\t\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\t\tgetItemValue={(item) => item}\n\t\t\t\t\t\t\titems={[\n\t\t\t\t\t\t\t\troadways\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\trenderItem={(item, isHighlighted) =>\n\t\t\t\t\t\t\t\t<div style={{ background: isHighlighted ? 'lightgray' : 'white' }}>\n\t\t\t\t\t\t\t\t{item.label}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t\tonChange={(e) => value = e.target.value}\n\t\t\t\t\t\t\tonSelect={(val) => value = val}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\n\t\t\t\t\t<TrafficCameras \n\t\t\t\t\t\troads={roads}\n\t\t\t\t\t\tcamIndex={camIndex}\n\t\t\t\t\t\tref={this.cameraElement} />\n\t\t\t\t</React.Fragment>\n\t\t\t</div>\n\t\t)\n\t}\n}"]},"metadata":{},"sourceType":"module"}