{"ast":null,"code":"var _jsxFileName = \"/Users/aundrekerr/Projects/React2019/cp24/src/components/Traffic.js\";\nimport React from 'react';\nimport TrafficCameras from './traffic/TrafficCameras.js';\nimport Autosuggest from 'react-autosuggest';\nimport { fetchCameras } from '../utils/api';\nimport '../styles/components/traffic/_traffic.scss';\n/**\n * Component responsible for rendering the traffic components.\n */\n\nexport default class Traffic extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      cameras: {},\n      roadways: [],\n      roads: [],\n      currentRoadway: 'select',\n      value: '',\n      suggestions: [],\n      trafficToggle: 'cameras'\n    };\n\n    this.onChange = (event, {\n      newValue,\n      method\n    }) => {\n      this.setState({\n        value: newValue\n      });\n    };\n\n    this.onSuggestionsFetchRequested = ({\n      value\n    }) => {\n      const roadNames = this.state.roads.map(road => road.Name);\n      this.setState({\n        suggestions: this.getSuggestions(value, roadNames)\n      });\n    };\n\n    this.onSuggestionsClearRequested = () => {\n      this.setState({\n        suggestions: []\n      });\n    };\n\n    this.onSuggestionSelected = (event, {\n      suggestionValue\n    }) => {\n      const newIndex = this.state.roads.findIndex(e => e.Name === suggestionValue);\n      this.setState({\n        camIndex: newIndex\n      });\n    };\n\n    this.getInitialState = this.getInitialState.bind(this);\n    this.handleSelectChange = this.handleSelectChange.bind(this);\n    this.getSuggestions = this.getSuggestions.bind(this);\n    this.getSuggestionValue = this.getSuggestionValue.bind(this);\n    this.renderSuggestion = this.renderSuggestion.bind(this);\n  }\n\n  componentDidMount() {\n    fetchCameras().then(data => {\n      const cams = data.filter(cam => cam.Organization === \"MTO\");\n      const roadways = [...new Set(cams.map(({\n        RoadwayName\n      }) => RoadwayName))];\n      const roads = data.filter(cam => cam.RoadwayName === \"HWY 401\" && cam.Organization === \"MTO\");\n      const roadNames = roads.map(road => road.Name);\n      this.setState({\n        loading: false,\n        cameras: cams,\n        roadways: roadways,\n        roads: roads,\n        currentRoadway: roadways[0],\n        suggestions: roadNames\n      });\n    });\n  }\n\n  getSuggestions(value, roads) {\n    const inputValue = value.trim().toLowerCase();\n    return roads.filter(x => x.toLowerCase().includes(inputValue.toLowerCase()));\n  }\n\n  getSuggestionValue(suggestion) {\n    return suggestion;\n  }\n\n  renderSuggestion(suggestion) {\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, suggestion);\n  }\n\n  render() {\n    const _this$state = this.state,\n          loading = _this$state.loading,\n          trafficToggle = _this$state.trafficToggle,\n          roads = _this$state.roads,\n          roadways = _this$state.roadways,\n          suggestions = _this$state.suggestions,\n          value = _this$state.value,\n          onChange = _this$state.onChange;\n    const inputProps = {\n      placeholder: \"Enter a road...\"\n    };\n    return React.createElement(\"div\", {\n      className: \"traffic__wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, !loading === false ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"loading traffic\") : trafficToggle === 'cameras' ? React.createElement(\"h5\", {\n      className: \"title-block light clickable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Traffic - Cameras\")) : React.createElement(\"h5\", {\n      className: \"title-block light clickable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Traffic - Routes\")), !loading === false ? null : React.createElement(\"div\", {\n      className: \"camera-select__wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Autosuggest, {\n      suggestions: suggestions,\n      onSuggestionsFetchRequested: this.onSuggestionsFetchRequested,\n      onSuggestionsClearRequested: this.onSuggestionsClearRequested,\n      onSuggestionSelected: this.onSuggestionSelected,\n      getSuggestionValue: this.getSuggestionValue,\n      renderSuggestion: this.renderSuggestion,\n      inputProps: inputProps,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      onChange: this.handleSelectChange,\n      value: this.state.currentRoadway,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, roadways.map((roadway, index) => roadway === null ? null : React.createElement(\"option\", {\n      key: index,\n      value: roadway,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, roadway))), React.createElement(\"span\", {\n      className: \"helper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    })), React.createElement(TrafficCameras, {\n      roads: roads,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/aundrekerr/Projects/React2019/cp24/src/components/Traffic.js"],"names":["React","TrafficCameras","Autosuggest","fetchCameras","Traffic","Component","constructor","props","state","loading","cameras","roadways","roads","currentRoadway","value","suggestions","trafficToggle","onChange","event","newValue","method","setState","onSuggestionsFetchRequested","roadNames","map","road","Name","getSuggestions","onSuggestionsClearRequested","onSuggestionSelected","suggestionValue","newIndex","findIndex","e","camIndex","getInitialState","bind","handleSelectChange","getSuggestionValue","renderSuggestion","componentDidMount","then","data","cams","filter","cam","Organization","Set","RoadwayName","inputValue","trim","toLowerCase","x","includes","suggestion","render","inputProps","placeholder","roadway","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport TrafficCameras from './traffic/TrafficCameras.js';\nimport Autosuggest from 'react-autosuggest';\n\nimport { fetchCameras } from '../utils/api';\n\nimport '../styles/components/traffic/_traffic.scss';\n\n/**\n * Component responsible for rendering the traffic components.\n */\nexport default class Traffic extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.getInitialState = this.getInitialState.bind(this);\n\t\tthis.handleSelectChange = this.handleSelectChange.bind(this);\n\t\tthis.getSuggestions = this.getSuggestions.bind(this);\n\t\tthis.getSuggestionValue = this.getSuggestionValue.bind(this);\n\t\tthis.renderSuggestion = this.renderSuggestion.bind(this);\n\t}\n\n\tstate = {\n\t\tloading: true,\n\t\tcameras: {},\n\t\troadways: [],\n\t\troads: [],\n\t\tcurrentRoadway: 'select',\n\t\tvalue: '',\n\t\tsuggestions: [],\n\t\ttrafficToggle: 'cameras'\n\t}\n\n\tcomponentDidMount() {\n\t\tfetchCameras()\n\t\t\t.then((data) => {\n\t\t\t\tconst cams = data.filter(cam => cam.Organization === \"MTO\");\n\t\t\t\tconst roadways = [...(new Set(cams.map(({ RoadwayName }) => RoadwayName)))];\n\t\t\t\tconst roads = data.filter(cam => cam.RoadwayName === \"HWY 401\" && cam.Organization === \"MTO\");\n\t\t\t\tconst roadNames = roads.map(road => (road.Name))\n\n\t\t\t\tthis.setState({\n\t\t\t\t\tloading: false,\n\t\t\t\t\tcameras: cams,\n\t\t\t\t\troadways: roadways,\n\t\t\t\t\troads: roads,\n\t\t\t\t\tcurrentRoadway: roadways[0],\n\t\t\t\t\tsuggestions: roadNames\n\t\t\t\t})\n\t\t\t})\n\t}\n\n\tonChange = (event, { newValue, method }) => {\n\t\tthis.setState({\n\t\t\tvalue: newValue\n\t\t});\n\t};\n\n\tonSuggestionsFetchRequested = ({ value }) => {\n\t\tconst roadNames = this.state.roads.map(road => (road.Name))\n\t\t\n\t\tthis.setState({\n\t\t\tsuggestions: this.getSuggestions(value, roadNames)\n\t\t});\n\t};\n\n\tonSuggestionsClearRequested = () => {\n\t\tthis.setState({\n\t\t\tsuggestions: []\n\t\t});\n\t};\n\n\tonSuggestionSelected = (event, {suggestionValue}) => {\n\t\tconst newIndex = this.state.roads.findIndex(e => e.Name === suggestionValue)\n\t\tthis.setState({\n\t\t\tcamIndex: newIndex\n\t\t})\n\t}\n\n\tgetSuggestions(value, roads) {\n\t\tconst inputValue = value.trim().toLowerCase();\n\t\treturn roads.filter(x => x.toLowerCase().includes(inputValue.toLowerCase()));\n\t};\n\n\tgetSuggestionValue(suggestion) {\n\t\treturn suggestion;\n\t}\n\n\trenderSuggestion(suggestion) {\n\t\treturn (\n\t\t\t<span>{suggestion}</span>\n\t\t)\n\t}\n\n\trender() {\n\t\tconst { loading, trafficToggle, roads, roadways, suggestions, value, onChange } = this.state;\n\t\tconst inputProps = {\n\t\t\tplaceholder: \"Enter a road...\",\n\t\t};\n\n\t\treturn (\n\t\t\t<div className=\"traffic__wrapper\">\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t{\n\t\t\t\t\t\t!loading === false \n\t\t\t\t\t\t? <p>loading traffic</p> \n\t\t\t\t\t\t: trafficToggle === 'cameras'\n\t\t\t\t\t\t\t? <h5 className='title-block light clickable'><span>Traffic - Cameras</span></h5>\n\t\t\t\t\t\t\t: <h5 className='title-block light clickable'><span>Traffic - Routes</span></h5>\n\t\t\t\t\t}\n\n\t\t\t\t\t{\n\t\t\t\t\t\t!loading === false \n\t\t\t\t\t\t\t? null\n\t\t\t\t\t\t\t: <div className=\"camera-select__wrapper\">\n\t\t\t\t\t\t\t\t<Autosuggest \n\t\t\t\t\t\t\t\t\tsuggestions={suggestions}\n\t\t\t\t\t\t\t\t\tonSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n\t\t\t\t\t\t\t\t\tonSuggestionsClearRequested={this.onSuggestionsClearRequested}\n\t\t\t\t\t\t\t\t\tonSuggestionSelected={this.onSuggestionSelected}\n\t\t\t\t\t\t\t\t\tgetSuggestionValue={this.getSuggestionValue}\n\t\t\t\t\t\t\t\t\trenderSuggestion={this.renderSuggestion}\n\t\t\t\t\t\t\t\t\tinputProps={inputProps} \n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<select onChange={this.handleSelectChange} value={this.state.currentRoadway}>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\troadways.map((roadway, index) => (\n\t\t\t\t\t\t\t\t\t\t\troadway === null \n\t\t\t\t\t\t\t\t\t\t\t\t? null\n\t\t\t\t\t\t\t\t\t\t\t\t: <option key={index} value={roadway}>{roadway}</option>\n\t\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t<span className=\"helper\"/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\n\t\t\t\t\t<TrafficCameras \n\t\t\t\t\t\troads={roads}  />\n\t\t\t\t</React.Fragment>\n\t\t\t</div>\n\t\t)\n\t}\n}"]},"metadata":{},"sourceType":"module"}